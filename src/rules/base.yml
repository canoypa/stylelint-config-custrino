rules:
  # エラー
  color-no-invalid-hex: true # 無効な色コード
  function-calc-no-invalid: true # 無効な calc 式
  function-linear-gradient-no-nonstandard-direction: true # 無効な linear-gradient
  string-no-newline: true # エスケープなしの改行なし

  # エラー元
  no-unknown-animations: true # 存在しないアニメーション名
  declaration-no-important: true # !important なし
  no-descending-specificity: true # 高レベルセレクタの後の低レベルセレクタなし
  no-duplicate-selectors: true # 重複するセレクタ
  declaration-block-no-duplicate-properties: true # 重複するプロパティ
  font-family-no-duplicate-names: true # 重複するフォント指定
  no-duplicate-at-import-rules: true # 重複するインポートなし
  declaration-block-no-shorthand-property-overrides: true # 省略プロパティで上書きなし

  # スタイル
  string-quotes: [double, { severity: warning }] # ダブルクオートを使用
  no-extra-semicolons: [true, { severity: warning }] # 不要なセミコロン
  block-no-empty: [true, { severity: warning }] # 空のブロックなし
  comment-no-empty: [true, { severity: warning }] # 空のコメントなし
  max-empty-lines: [1, { severity: warning }] # 最大空行
  selector-max-empty-lines: [0, { severity: warning }] # セレクタ内の空行なし
  value-list-max-empty-lines: [0, { severity: warning }] # 値リストの空行なし
  shorthand-property-no-redundant-values: [true, { severity: warning }] # 短縮可能な値
  declaration-block-no-redundant-longhand-properties: [
      true,
      { severity: warning },
    ] # 短縮可能なプロパティ
  number-leading-zero: [always, { severity: warning }] # 少数先行の 0. を要求
  number-no-trailing-zeros: [true, { severity: warning }] # 末端の 0 なし
  length-zero-no-unit: [true, { severity: warning }] # 0 の単位なし
  rule-empty-line-before: [
      always,
      { severity: warning, except: [first-nested] },
    ] # ルール間に改行が必要
  at-rule-empty-line-before: [
      always,
      {
        severity: warning,
        except: [first-nested],
        ignore: [after-comment, blockless-after-blockless],
      },
    ] # @ ルール前に改行

  selector-type-case: [lower, { severity: warning }] # セレクタに小文字を使用
  selector-pseudo-class-case: [lower, { severity: warning }] # 疑似クラスに小文字を使用
  selector-pseudo-element-case: [lower, { severity: warning }] # 疑似要素に小文字を使用
  property-case: [lower, { severity: warning }] # プロパティ名に小文字を使用
  function-name-case: [lower, { severity: warning }] # 関数名に小文字を使用
  at-rule-name-case: [lower, { severity: warning }] # ルール名に小文字を使用
  media-feature-name-case: [lower, { severity: warning }] # メディアクエリに小文字を使用
  unit-case: [lower, { severity: warning }] # 単位に小文字を使用
  value-keyword-case: [lower, { severity: warning }] # キーワードに小文字を使用

  selector-descendant-combinator-no-non-space: [true, { severity: warning }] # セレクタ後の複数スペース、改行なし
  selector-combinator-space-before: [always, { severity: warning }] # セレクタ接続演算子前にスペース
  selector-combinator-space-after: [always, { severity: warning }] # セレクタ接続演算子後にスペース
  selector-list-comma-space-before: [never, { severity: warning }] # セレクタリストコンマの前のスペースなし
  selector-list-comma-newline-before: never-multi-line # セレクタリストコンマの前の改行なし
  selector-list-comma-newline-after: [always, { severity: warning }] # セレクタリストコンマの後に改行
  selector-no-qualifying-type: [true, { severity: warning, ignore: attribute }] # 要素セレクタの修飾なし
  selector-attribute-brackets-space-inside: [never, { severity: warning }] # セレクタブランケット内のスペースなし
  selector-attribute-operator-space-before: [never, { severity: warning }] # 属性セレクタ内演算子前のスペースなし
  selector-attribute-operator-space-after: [never, { severity: warning }] # 属性セレクタ内演算子後のスペースなし
  selector-pseudo-class-parentheses-space-inside: [never, { severity: warning }] # 擬似クラス括弧にスペースなし
  selector-pseudo-element-colon-notation: [double, { severity: warning }] # 疑似要素にダブルコロンを使用

  block-closing-brace-empty-line-before: [never, { severity: warning }] # ブロック末端の空行なし
  block-opening-brace-newline-after: [always, { severity: warning }] # ブロック開始ブレース後に改行
  block-closing-brace-newline-before: [always, { severity: warning }] # ブロック終了ブレース前に改行
  block-opening-brace-space-before: [always, { severity: warning }] # ブロック開始ブレース前にスペース

  declaration-colon-newline-after: [always-multi-line, { severity: warning }] # 複数行宣言では値毎に改行
  declaration-block-semicolon-newline-before: [
      never-multi-line,
      { severity: warning },
    ] # セミコロン前の改行なし
  declaration-block-semicolon-newline-after: [always, { severity: warning }] # 宣言毎に改行 (セミコロン後に改行
  declaration-block-trailing-semicolon: [always, { severity: warning }] # 最後の宣言にセミコロン
  declaration-colon-space-before: [never, { severity: warning }] # コロン前のスペースなし
  declaration-colon-space-after: [always-single-line, { severity: warning }] # コロン後にスペース

  value-list-comma-newline-before: [never-multi-line, { severity: warning }] # 複数行値リストコンマ前の改行なし
  value-list-comma-newline-after: [always-multi-line, { severity: warning }] # 複数行値リストコンマ後に改行
  value-list-comma-space-before: [never, { severity: warning }] # 値リストコンマ前のスペースなし
  value-list-comma-space-after: [always-single-line, { severity: warning }] # 値リストコンマ後にスペースあり

  function-whitespace-after: [always, { severity: warning }] # 関数後のスペース
  function-parentheses-newline-inside: [never-multi-line, { severity: warning }] # 関数括弧の改行なし
  function-parentheses-space-inside: [never, { severity: warning }] # 関数括弧内のスペースなし
  function-comma-space-before: [never, { severity: warning }] # 関数コンマ前のスペースなし
  function-comma-space-after: [always, { severity: warning }] # 関数コンマ後のスペースあり

  media-query-list-comma-newline-before: [
      never-multi-line,
      { severity: warning },
    ] # メディアクエリリストカンマ前の改行なし
  media-query-list-comma-newline-after: [
      always-multi-line,
      { severity: warning },
    ] # 複数行メディアクエリリストカンマ後に改行
  media-query-list-comma-space-before: [never, { severity: warning }] # メディアクエリリストコンマ前のスペースなし
  media-query-list-comma-space-after: [always, { severity: warning }] # メディアクエリリストコンマ後にスペース
  media-feature-parentheses-space-inside: [never, { severity: warning }] # メディア括弧内のスペースなし
  media-feature-colon-space-before: [never, { severity: warning }] # メディアクエリコンマの前のスペースなし
  media-feature-colon-space-after: [always, { severity: warning }] # メディアクエリコロンの後のスペース

  at-rule-semicolon-newline-after: [always, { severity: warning }] # @ ルールセミコロン後に改行
  at-rule-name-newline-after: [always-multi-line, { severity: warning }] # 複数行 @ ルール名後に改行
  at-rule-name-space-after: [always-single-line, { severity: warning }] # @ ルール名語にスペース
  at-rule-semicolon-space-before: [never, { severity: warning }] # @ ルールセミコロン前のスペースなし

  comment-whitespace-inside: [always, { severity: warning }] # コメント内にスペース

  # scss とかと重複しそう できれば対応
  # "unit-no-unknown": true, // 不明なユニットなし
  # "property-no-unknown": true, // 不明なプロパティなし
  # "at-rule-no-unknown": true, // 不明な @ ルールなし
  # "selector-pseudo-class-no-unknown": true, // 不明な擬似クラスなし
  # "selector-pseudo-element-no-unknown": true, // 不明な疑似要素なし
  # "selector-type-no-unknown": true, // 不明な要素なし
  # "media-feature-name-no-unknown": true, // 不明なメディアクエリなし
  # "media-feature-range-operator-space-before": "never", // メディアクエリ比較前のスペースなし
  # "media-feature-range-operator-space-aftor": "never", // メディアクエリ比較後のスペースなし
  #
  # color-named: never,  # 名前付き色なし
